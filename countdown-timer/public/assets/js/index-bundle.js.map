{"version":3,"file":"assets/js/index-bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN4B;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://webpack-static/./resources/assets/scss/style.scss","webpack://webpack-static/webpack/bootstrap","webpack://webpack-static/webpack/runtime/make namespace object","webpack://webpack-static/./resources/assets/js/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../scss/style.scss';\n\nconst newYears = \"1 Jan 2023\";\n\nfunction countdown(){\n  const newYearDate = new Date(newYears);\n  const currentDate = new Date();\n\n  //何秒残されているか計算。\n  const leftSeconds = (newYearDate - currentDate) / 1000;\n\n  //日・時間・分・秒を取得する\n  const days = Math.floor( leftSeconds / 3600 / 24);\n  const hours = Math.floor( (leftSeconds - days * 3600 * 24) / 60 / 60 );\n  const minutes = Math.floor( (leftSeconds - (days * 3600 * 24 + hours * 3600)) / 60);\n  const seconds = Math.floor( leftSeconds - (days * 3600 * 24 + hours * 3600 + minutes * 60));\n\n  // console.log(leftSeconds);\n  // console.log(days, hours, minutes, seconds);\n\n  return [days, hours, minutes, seconds];\n}\n\n// countdown();\n\nfunction count() {\n  setInterval( () => {\n    insertTime(countdown());\n  }, 1000)\n}\n\ncount();\n\nfunction insertTime([days, hours, minutes, seconds]){\n  document.getElementById('days').innerText = days;\n  document.getElementById('hours').innerText = hours;\n  document.getElementById('minutes').innerText = minutes;\n  document.getElementById('seconds').innerText = seconds;\n}\n\n"],"names":[],"sourceRoot":""}